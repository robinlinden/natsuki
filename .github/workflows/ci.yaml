name: ci
on: [pull_request, workflow_dispatch]
env:
  NATS_VERSION: v2.9.17
jobs:
  linux-ci:
    name: ${{ matrix.name }}
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        include:
          - name: linux-gcc
            cc: gcc-10
            cxx: g++-10
          - name: linux-clang-asan
            cc: clang-12
            cxx: clang++-12
            bazel: --config asan
          - name: linux-clang-tsan
            cc: clang-12
            cxx: clang++-12
            bazel: --config tsan
          - name: linux-clang-ubsan
            cc: clang-12
            cxx: clang++-12
            bazel: --config ubsan
    steps:
      - uses: actions/checkout@v3
      - run: echo "CC=${{ matrix.cc }}" >>$GITHUB_ENV && echo "CXX=${{ matrix.cxx }}" >>$GITHUB_ENV
      - run: echo "build ${{ matrix.bazel }}" >.bazelrc.local && echo "build -c opt" >>.bazelrc.local
      - run: bazel build ...
      - run: |
          wget -qO- https://github.com/nats-io/nats-server/releases/download/$NATS_VERSION/nats-server-$NATS_VERSION-linux-amd64.tar.gz | tar -xvz
          chmod +x nats-server-$NATS_VERSION-linux-amd64/nats-server
          ./nats-server-$NATS_VERSION-linux-amd64/nats-server --debug >>nats.log 2>&1 &
      - run: bazel test ... && cat nats.log && :>nats.log
      - run: bazel run natsuki:natsuki_example && cat nats.log && :>nats.log
      - run: bazel run bench -- --msgs 10000 --msgs-per-second 5000 --size 256 --pub 2 --sub 1 && cat nats.log && :>nats.log
      - run: bazel run bench:natsc -- --msgs 10000 --msgs-per-second 5000 --size 256 --pub 2 --sub 1 && cat nats.log && :>nats.log
      # Check that ported dependencies' binaries and misc bits build.
      - run: bazel build @zenoh-pico//...

  windows-msvc:
    runs-on: windows-2022
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v3
      - run: bazel build ...
      - run: |
          curl --location https://github.com/nats-io/nats-server/releases/download/$NATS_VERSION/nats-server-$NATS_VERSION-windows-amd64.tar.gz | tar -xvz
          ./nats-server-$NATS_VERSION-windows-amd64/nats-server --debug >>nats.log 2>&1 &
      - run: bazel test ... && cat nats.log && :>nats.log
      - run: bazel run natsuki:natsuki_example && cat nats.log && :>nats.log
      - run: bazel run bench -- --msgs 10000 --msgs-per-second 5000 --size 256 --pub 2 --sub 1 && cat nats.log && :>nats.log
      - run: bazel run bench:natsc -- --msgs 10000 --msgs-per-second 5000 --size 256 --pub 2 --sub 1 && cat nats.log && :>nats.log

  buildifier:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - run: wget --output-document=buildifier https://github.com/bazelbuild/buildtools/releases/download/5.1.0/buildifier-linux-amd64 && sudo chmod +x buildifier
      - run: ./buildifier --lint=warn --warnings=all -mode diff WORKSPACE $(find . -type f -iname "*.BUILD" -or -iname BUILD)

  prettier:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - run: npm install --global prettier@2.8.0
      - run: npx prettier --ignore-path .gitignore --write .
      - run: git diff --exit-code

  linux-cmake:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - run: sudo apt-get update && sudo apt-get install --no-install-recommends libasio-dev
      # Test the oldest supported CMake version.
      - run: pip install cmake==3.14.4.post1 && cmake --version
      - run: CC=gcc-10 CXX=g++-10 cmake -Wdev -Werror=dev -S . -B build-oldest-supported
      - run: cmake --build build-oldest-supported
      # Test the newest supported CMake version.
      - run: pip install cmake==3.26.3 && cmake --version
      - run: CC=gcc-10 CXX=g++-10 cmake -Wdev -Werror=dev -S . -B build-newest-supported
      - run: cmake --build build-newest-supported
